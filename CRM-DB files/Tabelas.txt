-- Table: public.avaliacao

-- DROP TABLE IF EXISTS public.avaliacao;

CREATE TABLE IF NOT EXISTS public.avaliacao
(
    id_avaliacao integer NOT NULL,
    id_cliente integer NOT NULL,
    id_servico integer NOT NULL,
    nota numeric(10,0) NOT NULL,
    comentario text COLLATE pg_catalog."default" NOT NULL,
    data_avaliacao date NOT NULL,
    CONSTRAINT avaliacao_pkey PRIMARY KEY (id_avaliacao),
    CONSTRAINT id_cliente_fk FOREIGN KEY (id_cliente)
        REFERENCES public.clientes (id_cliente) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT id_servico_fk FOREIGN KEY (id_servico)
        REFERENCES public.servico (id_servico) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.avaliacao
    OWNER to postgres;

REVOKE ALL ON TABLE public.avaliacao FROM estagiario;
REVOKE ALL ON TABLE public.avaliacao FROM funcionario;
REVOKE ALL ON TABLE public.avaliacao FROM gerente;

GRANT SELECT ON TABLE public.avaliacao TO estagiario;

GRANT UPDATE, SELECT, INSERT ON TABLE public.avaliacao TO funcionario;

GRANT UPDATE, DELETE, INSERT, SELECT ON TABLE public.avaliacao TO gerente;

GRANT ALL ON TABLE public.avaliacao TO postgres;
-- Index: idx_gin_avaliacao

-- DROP INDEX IF EXISTS public.idx_gin_avaliacao;

CREATE INDEX IF NOT EXISTS idx_gin_avaliacao
    ON public.avaliacao USING gin
    (comentario COLLATE pg_catalog."default" gin_trgm_ops)
    TABLESPACE pg_default;

/////////////////////////////////////////////////////////////////

-- Table: public.clientes

-- DROP TABLE IF EXISTS public.clientes;

CREATE TABLE IF NOT EXISTS public.clientes
(
    id_cliente integer NOT NULL,
    nome_cliente character varying(30) COLLATE pg_catalog."default" NOT NULL,
    email character varying(64) COLLATE pg_catalog."default" NOT NULL,
    telefone character varying(30) COLLATE pg_catalog."default" NOT NULL,
    endereco character varying(30) COLLATE pg_catalog."default" NOT NULL,
    cpf_cnpj character varying(20) COLLATE pg_catalog."default" NOT NULL,
    data_cadastro date NOT NULL,
    tipo_cliente character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT clientes_pkey PRIMARY KEY (id_cliente)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.clientes
    OWNER to postgres;

REVOKE ALL ON TABLE public.clientes FROM estagiario;
REVOKE ALL ON TABLE public.clientes FROM funcionario;
REVOKE ALL ON TABLE public.clientes FROM gerente;

GRANT SELECT ON TABLE public.clientes TO estagiario WITH GRANT OPTION;

GRANT UPDATE, SELECT, INSERT ON TABLE public.clientes TO funcionario;

GRANT UPDATE, DELETE, INSERT, SELECT ON TABLE public.clientes TO gerente;

GRANT ALL ON TABLE public.clientes TO postgres;

/////////////////////////////////////////////////////////////////

-- Table: public.entrada

-- DROP TABLE IF EXISTS public.entrada;

CREATE TABLE IF NOT EXISTS public.entrada
(
    id_entrada integer NOT NULL,
    id_cliente integer NOT NULL,
    data_entrada date NOT NULL,
    valor_entrada double precision NOT NULL,
    metodo_pagamento character varying(15) COLLATE pg_catalog."default" NOT NULL,
    obs text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT entrada_pkey PRIMARY KEY (id_entrada),
    CONSTRAINT id_cliente_fk FOREIGN KEY (id_cliente)
        REFERENCES public.clientes (id_cliente) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.entrada
    OWNER to postgres;

REVOKE ALL ON TABLE public.entrada FROM funcionario;
REVOKE ALL ON TABLE public.entrada FROM gerente;

GRANT UPDATE, INSERT, SELECT ON TABLE public.entrada TO funcionario;

GRANT UPDATE, DELETE, INSERT, SELECT ON TABLE public.entrada TO gerente;

GRANT ALL ON TABLE public.entrada TO postgres;
-- Index: idx_gin_entrada

-- DROP INDEX IF EXISTS public.idx_gin_entrada;

CREATE INDEX IF NOT EXISTS idx_gin_entrada
    ON public.entrada USING gin
    (obs COLLATE pg_catalog."default" gin_trgm_ops)
    TABLESPACE pg_default;

/////////////////////////////////////////////////////////////////

-- Table: public.funcionarios

-- DROP TABLE IF EXISTS public.funcionarios;

CREATE TABLE IF NOT EXISTS public.funcionarios
(
    id_funcionario integer NOT NULL,
    nome_funcionario character varying(30) COLLATE pg_catalog."default" NOT NULL,
    cargo character varying(30) COLLATE pg_catalog."default" NOT NULL,
    email character varying(64) COLLATE pg_catalog."default" NOT NULL,
    telefone character varying(30) COLLATE pg_catalog."default" NOT NULL,
    data_contratacao date NOT NULL,
    prazo_contrato character varying(30) COLLATE pg_catalog."default" NOT NULL,
    genero character varying(15) COLLATE pg_catalog."default" NOT NULL,
    cpf character varying(20) COLLATE pg_catalog."default" NOT NULL,
    endereco character varying(30) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT funcionarios_pkey PRIMARY KEY (id_funcionario)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.funcionarios
    OWNER to postgres;

REVOKE ALL ON TABLE public.funcionarios FROM gerente;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE public.funcionarios TO gerente;

GRANT ALL ON TABLE public.funcionarios TO postgres;

/////////////////////////////////////////////////////////////////

-- Table: public.maquina

-- DROP TABLE IF EXISTS public.maquina;

CREATE TABLE IF NOT EXISTS public.maquina
(
    "id_maquina " integer NOT NULL,
    id_cliente integer NOT NULL,
    tipo character varying(30) COLLATE pg_catalog."default" NOT NULL,
    status character varying(30) COLLATE pg_catalog."default" NOT NULL,
    hora_inicio time with time zone NOT NULL,
    hora_fim time with time zone NOT NULL,
    CONSTRAINT maquina_pkey PRIMARY KEY ("id_maquina "),
    CONSTRAINT id_cliente_fk FOREIGN KEY (id_cliente)
        REFERENCES public.clientes (id_cliente) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.maquina
    OWNER to postgres;

REVOKE ALL ON TABLE public.maquina FROM estagiario;
REVOKE ALL ON TABLE public.maquina FROM funcionario;
REVOKE ALL ON TABLE public.maquina FROM gerente;

GRANT SELECT ON TABLE public.maquina TO estagiario;

GRANT UPDATE, SELECT, INSERT ON TABLE public.maquina TO funcionario;

GRANT UPDATE, DELETE, INSERT, SELECT ON TABLE public.maquina TO gerente;

GRANT ALL ON TABLE public.maquina TO postgres;

/////////////////////////////////////////////////////////////////

-- Table: public.movimento_financeiro

-- DROP TABLE IF EXISTS public.movimento_financeiro;

CREATE TABLE IF NOT EXISTS public.movimento_financeiro
(
    tabela_banco character varying(20) COLLATE pg_catalog."default" NOT NULL,
    acao character varying(20) COLLATE pg_catalog."default" NOT NULL,
    data date NOT NULL,
    hora time with time zone NOT NULL,
    usuario character varying(20) COLLATE pg_catalog."default" NOT NULL
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.movimento_financeiro
    OWNER to postgres;

REVOKE ALL ON TABLE public.movimento_financeiro FROM gerente;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE public.movimento_financeiro TO gerente;

GRANT ALL ON TABLE public.movimento_financeiro TO postgres;

/////////////////////////////////////////////////////////////////

-- Table: public.reserva

-- DROP TABLE IF EXISTS public.reserva;

CREATE TABLE IF NOT EXISTS public.reserva
(
    id_reserva integer NOT NULL,
    id_cliente integer NOT NULL,
    id_maquina integer NOT NULL,
    data_reserva date NOT NULL,
    CONSTRAINT reserva_pkey PRIMARY KEY (id_reserva),
    CONSTRAINT id_cliente_fk FOREIGN KEY (id_cliente)
        REFERENCES public.clientes (id_cliente) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT id_maquina_fk FOREIGN KEY (id_maquina)
        REFERENCES public.maquina ("id_maquina ") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.reserva
    OWNER to postgres;

REVOKE ALL ON TABLE public.reserva FROM estagiario;
REVOKE ALL ON TABLE public.reserva FROM funcionario;
REVOKE ALL ON TABLE public.reserva FROM gerente;

GRANT SELECT ON TABLE public.reserva TO estagiario;

GRANT UPDATE, SELECT, INSERT ON TABLE public.reserva TO funcionario;

GRANT UPDATE, DELETE, INSERT, SELECT ON TABLE public.reserva TO gerente;

GRANT ALL ON TABLE public.reserva TO postgres;

/////////////////////////////////////////////////////////////////

-- Table: public.saida

-- DROP TABLE IF EXISTS public.saida;

CREATE TABLE IF NOT EXISTS public.saida
(
    id_saida integer NOT NULL,
    data_saida date NOT NULL,
    valor_saida double precision NOT NULL,
    obs text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT saida_pkey PRIMARY KEY (id_saida)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.saida
    OWNER to postgres;

REVOKE ALL ON TABLE public.saida FROM funcionario;
REVOKE ALL ON TABLE public.saida FROM gerente;

GRANT UPDATE, INSERT, SELECT ON TABLE public.saida TO funcionario;

GRANT UPDATE, DELETE, INSERT, SELECT ON TABLE public.saida TO gerente;

GRANT ALL ON TABLE public.saida TO postgres;
-- Index: idx_gin_saida

-- DROP INDEX IF EXISTS public.idx_gin_saida;

CREATE INDEX IF NOT EXISTS idx_gin_saida
    ON public.saida USING gin
    (obs COLLATE pg_catalog."default" gin_trgm_ops)
    TABLESPACE pg_default;

/////////////////////////////////////////////////////////////////

-- Table: public.servico

-- DROP TABLE IF EXISTS public.servico;

CREATE TABLE IF NOT EXISTS public.servico
(
    id_servico integer NOT NULL,
    tipo_servico character varying(30) COLLATE pg_catalog."default" NOT NULL,
    descricao character varying(30) COLLATE pg_catalog."default",
    produtos character varying(30) COLLATE pg_catalog."default",
    valor double precision,
    CONSTRAINT servico_pkey PRIMARY KEY (id_servico)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.servico
    OWNER to postgres;

REVOKE ALL ON TABLE public.servico FROM estagiario;
REVOKE ALL ON TABLE public.servico FROM funcionario;
REVOKE ALL ON TABLE public.servico FROM gerente;

GRANT SELECT ON TABLE public.servico TO estagiario;

GRANT UPDATE, SELECT, INSERT ON TABLE public.servico TO funcionario;

GRANT UPDATE, DELETE, INSERT, SELECT ON TABLE public.servico TO gerente;

GRANT ALL ON TABLE public.servico TO postgres;
-- Index: idx_servico

-- DROP INDEX IF EXISTS public.idx_servico;

CREATE INDEX IF NOT EXISTS idx_servico
    ON public.servico USING btree
    (tipo_servico COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;

/////////////////////////////////////////////////////////////////

-- Table: public.historico_uso

-- DROP TABLE IF EXISTS public.historico_uso;

CREATE TABLE IF NOT EXISTS public.historico_uso
(
    id_historico integer NOT NULL,
    id_cliente integer NOT NULL,
    id_maquina integer NOT NULL,
    id_reserva integer NOT NULL,
    CONSTRAINT historico_uso_pkey PRIMARY KEY (id_historico),
    CONSTRAINT id_cliente_fk FOREIGN KEY (id_cliente)
        REFERENCES public.clientes (id_cliente) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT id_maquina_fk FOREIGN KEY (id_maquina)
        REFERENCES public.maquina ("id_maquina ") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT id_reserva_fk FOREIGN KEY (id_reserva)
        REFERENCES public.reserva (id_reserva) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.historico_uso
    OWNER to postgres;

REVOKE ALL ON TABLE public.historico_uso FROM estagiario;
REVOKE ALL ON TABLE public.historico_uso FROM funcionario;
REVOKE ALL ON TABLE public.historico_uso FROM gerente;

GRANT SELECT ON TABLE public.historico_uso TO estagiario;

GRANT UPDATE, SELECT, INSERT ON TABLE public.historico_uso TO funcionario;

GRANT UPDATE, DELETE, INSERT, SELECT ON TABLE public.historico_uso TO gerente;

GRANT ALL ON TABLE public.historico_uso TO postgres;
